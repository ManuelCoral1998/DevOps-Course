#!groovy

node {

  step([$class: 'WsCleanup'])

  stage "Checkout Git repo"
    checkout scm

  stage "Checkout additional repos"
    dir("Configuration_management") {
      git "https://github.com/andres1397/aik-portal"
    }
    dir("aik-app-api") {
      git "https://github.com/andres1397/aik-portal"
    }

    dir("aik-app-ui") {
      git "https://github.com/andres1397/aik-portal"
    }

    dir("infraestructura") {
      git "https://github.com/andres1397/aik-portal"
    }


  stage "Run Packer"
    sh "/usr/local/bin/packer validate -var=\"appVersion=${params.APP_VERSION}\" -var-file=CDelivery/packer/aik-app_vars.json CDelivery/packer/aik-app.json"
    sh "/usr/local/bin/packer build -machine-readable -var=\"appVersion=${params.APP_VERSION}\" -var-file=CDelivery/packer/aik-app_vars.json CDelivery/packer/aik-app.json | tee CDelivery/packer/packer.log"

  stage "Deploy AMI"

    string amiIdUnFormat = sh returnStdout: true, script:"tail -n1 CDeliverypacker/packer.log | awk '{printf \$NF}' "
    def amiId = amiIdUnFormat.replace("\\n","")
    def ec2Keypair = "devops-automatizacion-AguirreCoralUrbano"
    def secGroup = "sg-0846f3e2fde417c71"
    def instanceType = "t2.micro"
    def subnetId = "subnet-0bd25c232cc43ff62"

    sh "tail -n1 CDelivery/packer/packer.log"
    sh "cat CDelivery/packer/packer.log"
    echo "Esto tiene packer.log \$(cat CDelivery/packer/packer.log)"
    echo "Launching an instance from ${amiId}"
    sh "aws ec2 run-instances \
        --region us-west-2 \
        --image-id ${amiId} \
        --key-name ${ec2Keypair} \
        --security-group-ids ${secGroup} \
        --instance-type ${instanceType} \
        --subnet-id ${subnetId} \
        | tee .ec2_run-instances.log \
       "

    
    def instanceId = sh returnStdout: true, script: "printf \$(jq .Instances[0].InstanceId < .ec2_run-instances.log)"

    sh "aws ec2 create-tags --resources ${instanceId} \
        --region us-west-2 \
        --tags Key=Name,Value=\"Jenkins (aik-app-${params.APP_VERSION})\" Key=CreatedBy,Value=Jenkins"
    
    echo "Waiting for the instance to come into service"
    sh "aws ec2 wait instance-running --instance-ids ${instanceId}"
    sleep 60
    echo "Registering with ELB"
    def elbId = "alb-aik"
    sh "aws elbv2 register-targets \
    --region us-west-2 \
    --target-group-arn arn:aws:elasticloadbalancing:us-west-2:682086073548:targetgroup/lb-devops-AguirreCoralUrbano/0619d7230f0fb844 \
    --targets Id=${instanceId}"
  
}
